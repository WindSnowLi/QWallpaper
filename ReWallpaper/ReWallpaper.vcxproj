<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{19138828-667D-4B8E-8912-71570FA7A93F}</ProjectGuid>
    <Keyword>QtVS_v302</Keyword>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <QtMsBuild Condition="'$(QtMsBuild)'=='' OR !Exists('$(QtMsBuild)\qt.targets')">$(MSBuildProjectDirectory)\QtMsBuild</QtMsBuild>
    <ProjectName>QWallpaper</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <Target Name="QtMsBuildNotFound" BeforeTargets="CustomBuild;ClCompile" Condition="!Exists('$(QtMsBuild)\qt.targets') or !Exists('$(QtMsBuild)\qt.props')">
    <Message Importance="High" Text="QtMsBuild: could not locate qt.targets, qt.props; project may not build correctly." />
  </Target>
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>..\include;$(IncludePath)</IncludePath>
    <ReferencePath>..\lib;$(ReferencePath)</ReferencePath>
    <LibraryPath>..\lib;$(LibraryPath)</LibraryPath>
    <LibraryWPath>..\lib\bin;$(LibraryWPath)</LibraryWPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>..\include;$(IncludePath)</IncludePath>
    <ReferencePath>..\lib\debug;$(ReferencePath)</ReferencePath>
    <LibraryPath>..\lib\debug;$(LibraryPath)</LibraryPath>
    <LibraryWPath>..\lib\debug\bin;$(LibraryWPath)</LibraryWPath>
    <CopyCppRuntimeToOutputDir>true</CopyCppRuntimeToOutputDir>
  </PropertyGroup>
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt_defaults.props')">
    <Import Project="$(QtMsBuild)\qt_defaults.props" />
  </ImportGroup>
  <PropertyGroup Label="QtSettings" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <QtInstall>6.2.4_msvc2019_64</QtInstall>
    <QtModules>core;gui;widgets;opengl;openglwidgets;network;</QtModules>
    <QtHeaderSearchPath>
    </QtHeaderSearchPath>
    <QtLibrarySearchPath>
    </QtLibrarySearchPath>
  </PropertyGroup>
  <PropertyGroup Label="QtSettings" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <QtInstall>6.2.3_msvc2019_64</QtInstall>
    <QtModules>core;gui;widgets;network;</QtModules>
    <QtHeaderSearchPath>
    </QtHeaderSearchPath>
    <QtLibrarySearchPath>
    </QtLibrarySearchPath>
    <QtBuildConfig>release</QtBuildConfig>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg">
    <VcpkgEnabled>false</VcpkgEnabled>
    <VcpkgManifestInstall>false</VcpkgManifestInstall>
    <VcpkgAutoLink>false</VcpkgAutoLink>
  </PropertyGroup>
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt.props')">
    <Import Project="$(QtMsBuild)\qt.props" />
  </ImportGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\$(ProjectName).exe</OutputFile>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\lib\debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>opengl32.lib;boost_atomic-vc140-mt-gd.lib;boost_chrono-vc140-mt-gd.lib;boost_container-vc140-mt-gd.lib;boost_date_time-vc140-mt-gd.lib;boost_exception-vc140-mt-gd.lib;boost_regex-vc140-mt-gd.lib;boost_serialization-vc140-mt-gd.lib;boost_system-vc140-mt-gd.lib;boost_thread-vc140-mt-gd.lib;boost_wserialization-vc140-mt-gd.lib;%(AdditionalDependencies);$(Qt_LIBS_)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <DebugInformationFormat />
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\$(ProjectName).exe</OutputFile>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>boost_atomic-vc140-mt.lib;boost_chrono-vc140-mt.lib;boost_container-vc140-mt.lib;boost_date_time-vc140-mt.lib;boost_exception-vc140-mt.lib;boost_regex-vc140-mt.lib;boost_serialization-vc140-mt.lib;boost_system-vc140-mt.lib;boost_thread-vc140-mt.lib;boost_wserialization-vc140-mt.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="CRipple.cpp" />
    <ClCompile Include="CRippleWidget.cpp" />
    <ClCompile Include="globalvariable.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="mythread.cpp" />
    <ClCompile Include="QExpandOpenGLWidget.cpp" />
    <ClCompile Include="qwallpaper.cpp" />
    <ClCompile Include="SingleApplication.cpp" />
    <ClCompile Include="tool.cpp" />
    <ClCompile Include="videoplayer.cpp" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="qwallpaper.h" />
  </ItemGroup>
  <ItemGroup>
    <QtUic Include="rewallpaper.ui" />
  </ItemGroup>
  <ItemGroup>
    <QtRcc Include="rewallpaper.qrc" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="CRippleWidget.h" />
    <ClInclude Include="globalvariable.h" />
    <QtMoc Include="mythread.h" />
    <ClInclude Include="QExpandOpenGLWidget.h" />
    <ClInclude Include="ReadWriteini.hpp" />
    <ClInclude Include="resource.h" />
    <QtMoc Include="SingleApplication.h" />
    <ClInclude Include="tool.h" />
    <ClInclude Include="videoplayer.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="ReWallpaper.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="Resources\DynamicWallpaper.ico" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\glsl\draw.frag" />
    <None Include="Resources\glsl\draw.vert" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt.targets')">
    <Import Project="$(QtMsBuild)\qt.targets" />
  </ImportGroup>
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>